:py:mod:`dvcurator.gui`
=======================

.. py:module:: dvcurator.gui


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   dvcurator.gui.redirect_text
   dvcurator.gui.MainApp



Functions
~~~~~~~~~

.. autoapisummary::

   dvcurator.gui.main



.. py:class:: redirect_text(text_ctrl)

   Bases: :py:obj:`object`

   Redirect standard output to a text box in the GUI

   .. py:method:: write(string)


   .. py:method:: flush()



.. py:class:: MainApp(parent, *args, **kwargs)

   Bases: :py:obj:`tkinter.Frame`

   Frame widget which may contain other widgets and can have a 3D border.

   .. py:method:: disable_buttons()

      Disable most GUI buttons, for while an operation is in progress


   .. py:method:: enable_buttons()

      Re-enable most GUI buttons, for once an operation has finished


   .. py:method:: schedule_check(t)

      Check if an in-progress operation has finished after 1 second 


   .. py:method:: check_if_done(t)

      Enable buttons again if an operation is done, or run `schedule_check()` again


   .. py:method:: open_config()

      Manually select a config file 


   .. py:method:: load_config(path=None)

      Load the variables from a config file into the program


   .. py:method:: save_config_as()

      Manually save a config file (save-as)


   .. py:method:: save_config(path=None)

      Save variables to a 


   .. py:method:: check_subfolder()

      Check if a folder in dropbox for the loaded project already exists


   .. py:method:: set_dropbox()

      Set the top-level Dropbox folder


   .. py:method:: set_subfolder()

      Manually set a Dropbox project subfolder, for when `check_subfolder()` can't detect it but a folder does exist


   .. py:method:: open_explorer()

      Open the Dropbox project subfolder in the native file explorer


   .. py:method:: load_citation()

      Load project metadata from Dataverse, mainly runs `get_citaiton()`


   .. py:method:: download_extract()

      Run `download_extract()`


   .. py:method:: make_github()

      Run `generate_template()`


   .. py:method:: reset_all()

      Unload project metadata


   .. py:method:: rename()

      Run `basic_rename()`


   .. py:method:: convert()

      Run `docx_pdf()`


   .. py:method:: set_metadata()

      Run `standard_metadata()`


   .. py:method:: create_readme()

      Run `generate_readme()`


   .. py:method:: anonymize()

      Run anonymization processes


   .. py:method:: close_window()

      Save config before killing window



.. py:function:: main()


