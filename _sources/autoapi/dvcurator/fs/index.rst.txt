dvcurator.fs
============

.. py:module:: dvcurator.fs


Functions
---------

.. autoapisummary::

   dvcurator.fs.check_dropbox
   dvcurator.fs.recursive_scan
   dvcurator.fs.current_step
   dvcurator.fs.copy_new_step
   dvcurator.fs.anonymize_project


Module Contents
---------------

.. py:function:: check_dropbox(dropbox, project_name=None)

   Check whether the specified dropbox folder is accessible

   :param dropbox: Path to dropbox folder
   :type dropbox: path as a string
   :param project_name: Project name to check if there is an existing folder in dropbox
   :type project_name: String



.. py:function:: recursive_scan(path)

   List all files in folder, recursively. Used to generate file list in README

   :param path: Path to folder
   :type path: Path as string
   :return: Pretty-printed recursive file list
   :rtype: String



.. py:function:: current_step(folder)

   Find latest (highest numbered) step in the "QDR Prepared" subfolder, i.e. "4_metadata"

   :param folder: Folder to check, should be path to "QDR Prepared" folder
   :type folder: Path, as string
   :return: Path to subfolder with highest number, or None in case of error
   :rtype: Path as a string, or None



.. py:function:: copy_new_step(folder, step)

   Copy QDR Prepared latest step (i.e. 3_rename) to a new step (i.e. 4_metadata), incrementing step number

   :param folder: "QDR Prepared" folder
   :type folder: Path, as string
   :param step: Short description of next step, e.g. "metadata" or "rename"
   :type step: String
   :return: Path to newly created folder
   :rtype: String



.. py:function:: anonymize_project(folder, citation)

   Run full anonymization routine. Calls anon routine for filenames and PDF metadata

   :param folder: Project folder
   :type folder: path, as string
   :param citation Dataverse citation
   :return: Path to new folder
   :rtype: string


